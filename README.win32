libfreespace Build info
Updated 8/2/2013

General Information
===================

This document describes the build process for libfreespace-examples on Windows.


Required Tools
===================

The tools required to build the examples are the same as the tools required to
build libfreespace. This is because the examples build the libfreespace library
and use the libfreespace source. See the README.win32 for libfreespace and ensure
that libfreespace builds on your machine before proceeding to the examples.


Folder Hierarchy
===================

The build process relies upon a fixed directory structure between
the different projects.  The structure should be:
    <base>/libfreespace
    <base>/libfreespace-examples
where <base> represents your fully-qualified base directory.  For example, you
could use <base> = c:/Hillcrest/. Note that the packaged source releases
contain version numbers in their names. To build under Windows, you need
to remove those numbers. If you are building from the bazaar repository,
you do not need to make any changes.

This folder hierarchy is necessary because the libfreespace-examples build
the libfreespace library and draw upon the libfreespace source.


Getting the files
===================

To correctly check out all of the repositories, change to the <base>
directory, and then run the following checkout.sh script:
    #!/bin/sh
    bzr branch lp:libfreespace libfreespace
    bzr branch lp:libfreespace-examples libfreespace-examples
    # if you want the Java bindings
    bzr branch lp:jfreespace jfreespace

If you find this doesn't work, try:
    bzr branch lp:~libfreespace-devteam/libfreespace/cmake libfreespace
    bzr branch lp:~libfreespace-devteam/libfreespace-examples/cmake libfreespace-examples

Building
===================

Launch cmake-gui.

Fill in the "Where is the source code:" entry. This will be the location of the
libfreespace-examples directory. (e.g. c:\Hillcrest\libfreespace-examples)

Fill in the "Where to build the binaries" entry. This can be anywhere but a
reasonable location is c:\Hillcrest\build\libfreespace-examples.

If some configuration data opens up when you enter the build directory, it means
that the directory already had a build in it. You can reset the directory by 
selecting File > Delete Cache.

Click "Configure". 

At this point, all the configuration settings will be red. This is the time to 
make any changes to the settings that are displayed. Not all settings are
required, however some important ones are:

The WINDDK_DIR variable. If your WinDDK is installed in a typical location then
cmake should be able to detect it for you. A typical setting is:
    C:\WinDDK\7600.16385.1
    
If using Visual Studio 8 or 9, the VC8_INCLUDE or VC9_INCLUDE variable. If your
Visual Studio installation is in a typical location cmake should be able to detect
it for you. A typical setting is:
    C:\Program Files (x86)\Microsoft Visual Studio 9.0\VC\include

There are other configuration settings available:

CMAKE_INSTALL_PREFIX :
	The installation directory where the CMake install project will install to.
	This is initiated by building the "INSTALL" project in the VS solution.
	Default is typically "C:\Program Files (x86)\libfreespace-examples"
LIBFREESPACE_BACKEND :
    Specify an alternate backend on some paltforms. On Linux, valid values are
    'hidraw' and 'libusb'
LIBFREESPACE_CODECS_ONLY : (ON/OFF)
    Build only the libfreespace codecs
LIBFREESPACE_CUSTOM_INSTALL_RULES :
    CMake file to customize install rules when libfreespace is built as part of
    a larger project
LIBFREESPACE_DOCS_ENABLED : (ON/OFF)
    Enabled doxygen docs as build target
LIBFREESPACE_DOCS_INTERNAL : (ON/OFF)
    Generate doxygen for src files (in addition to API)
LIBFREESPACE_HIDRAW_THREADED_WRITES : (ON/OFF)
    Enable writes in a backend thread when using hidraw
LIBFREESPACE_ADDITIONAL_MESSAGE_FILE :
    Reserved for Hillcrest use. An additional HID message definition file.

Set whatever configuration settings you wish, then click "Configure" until all
red bars are gone. If a red bar persists, it means that setting will need to
be set manually.

Once the red bars are gone click "Generate".

There should now be a Visual Studio project under the "Where to build the
binaries" location. The project will be called libfreespace-examples.sln .

Open this project. Press F7 to build all. There should now be an executable
for each example in the Debug directory of the build directory.

If you wish to use the "INSTALL" feature of cmake, you will need to open
Visual Studio using administrator privileges. Then right click the "INSTALL"
project and click "Build". There will now be a libfreespace-examples build in
the install directory pointed to by CMAKE_INSTALL_PREFIX.

Documentation
=============

You can build the libfreespace Doxygen documentation via libfreespace-examples.

To make the doxygen documentation, you can simply build the libfreespace-docs
project in the libfreespace-examples solution.
    1) Open an explorer window to your build directory
    2) Open libfreespace-examples.sln
    3) Right click on the libfreespace-docs project and click "Build"
    4) You can open the documentation by returning to the explorer window, and
    opening docs > html > index.html

You can also build the documentation from the command line by opening a command
window in your build directory:
    1) Open an explorer window to your build directory
    2) Shift-(Right Click) on the window and select "Open command window here"
    3) In the command window, enter:
    cd doc
    doxygen Doxyfile
    4) From here you can open it using
    ./html/index.html

